%% determine the background images(for all chnnels) for the dataset to run

%run once before checking parameters using the section below

% imagedirectoryname has to be a string 'imagedirectoryname'. need to be
% one dir up from raw images

ff=readMMdirectory(imagedirectoryname);   % 
dims = [ max(ff.pos_x)+1 max(ff.pos_y)+1];
wavenames=ff.chan;
maxims= dims(1)*dims(2);
%generate background image for each channel
    for ii=1:length(wavenames) % get the background image for al channels  
        [minI, meanI]=mkBackgroundImageMM(ff,ii,min(500,maxims));
        bIms{ii}=uint16(2^16*minI);
        nIms{ii}=ones(size(bIms{ii}));
    end
%% script to optimize the segmentation parameters. Can look at a chosen image
% and adjust the parameters in the paramfile, if segmentation is not good. N is a linear index, image number
% need to be one directory up from the actual images folder ( since using
% the readMM2irectory function here)% 
% the parameter values below are mostly what you will need to adjust to
% obtain resonable segmentation. These need to be changed in the paramfile,
% not here

% userParam.nucIntensityLoc     (line 71 in paramfile): this parameter
% strongly depends on the mean fluorescence intensity of the background (use improfile to estimate this value and use it as a starting 
% test value for this parameter and see how the segmentation improves as you change it)

% userParam.gaussRadius         (line 37 in paramfile)
% userParam.gaussSigma          (line 38 in paramfile)

paramfile=('/Users/warmflashlab/CellTracker/paramFiles/setUserParamAN20X_uCOL.m');
close all
N =1;%  
flag = 1;% plot the resulting segmentation on images
[data1,mask1,toshow1]=ANrunOneMM(imagedirectoryname,N,bIms,nIms,'setUserParamAN20X_uCOL','DAPI',flag);%setUserParamAN20X  setUserParamAN20X_uCOL
imcontrast
%% once happy with the parameter set and the segmentationquality run this to process all the images in the 
% directory
% make a more descriptive name for the outputfile name (I usually put the stains in order into the filename, so I remember after a while what was stained for)
runFullTileMM(imagedirectoryname,'outputfile1.mat','setUserParamAN20X_uCOL',1);
runFullTileMM(imagedirectoryname,'outputfile2.mat','setUserParamAN20X_uCOL',1);

disp('done');
%%
clear all
% PLOT STUFF
 close all
 nms = {'esi_GNANOG_RSOX2','nodal_ko_GNANOG_RSOX2'}; % DAPI GFP(nanog) RFP(sox2) 
 nms2 = {'esi17 cells','Nodal knockout cells'};
% 
dapimax =30000;%
chanmax = 60000;
dir = '.';
scaledapi =1;
index1 = [8 5];
if scaledapi == 1
for k=1:size(nms2,2)
[dapi(k),ncells] = getmeandapi(nms(k),dir,index1, dapimax);
disp(['cells found' num2str(ncells) ]);
disp(['Mean dapi' num2str(dapi(k)) ]);
end
dapiscalefactor = dapi/dapi(1);
end
if scaledapi == 0
dapiscalefactor = ones(1,size(nms,2));
end

flag1 = 1;
thresh =[2 2]; 
[newdata,totalcells,ratios,ratios2,totcol]= plotallanalysisAN(thresh,nms,nms2,dir,[],[],index1,[],'Sox2',[],0,1,dapimax,chanmax,dapiscalefactor,flag1);  
h = figure(1);
h.Children.FontSize = 14;
%%
% plot the scatter plots colorcoded
param1 = 'Sox2'; % DAPI GFP(nanog) RFP(sox2)
param2 = 'Nanog';
index1 = [5];
dapimax = 15000;
toplot = cell(1,size(nms,2));
flag = 0;% generate third column with the col size
flag2 = 1;% do not normalize to DAPI if flag == 0;
scaledapi =1;
if scaledapi == 1
for k=1:size(nms2,2)
[dapi(k),ncells] = getmeandapi(nms(k),dir,index1, dapimax);
disp(['cells found' num2str(ncells) ]);
disp(['Mean dapi' num2str(dapi(k)) ]);
end
dapiscalefactor = dapi/dapi(1)
end
if scaledapi == 0
dapiscalefactor = ones(1,size(nms,2))
end
index2 = [8 6]; % DAPI GFP(nanog) RFP(sox2)
ucol = 5;
for k=1:size(nms,2)
        filename{k} = [dir filesep  nms{k} '.mat'];
        load(filename{k},'peaks','dims','plate1');
        col = plate1.colonies;
[alldata] = mkVectorsForScatterAN(peaks,col,index2,flag,flag2,dapimax,dapiscalefactor(k),ucol);
%mkVectorsForScatterAN(peaks,col,index2,flag,flag2,dapimax,dapiscalefactor)
 toplot{k} = alldata;
end
for j=1:size(nms,2)
    figure(j),scatter(toplot{j}(1:4:end,2),toplot{j}(1:4:end,1),[],toplot{j}(1:4:end,3),'LineWidth',2);legend(nms2{j}); hold on %[],toplot{j}(:,3)    
    box on
    ylabel(param1)
    xlabel(param2)
    ylim([0 10]);
    xlim([0 10]);
    h=figure(j);
    h.Colormap = jet;
    colorbar
    caxis([1 ucol])
    
end


%% get histograms for differen colony sizes
%index2 = [8 10];toplot{1} corresponds to data from outfile 1, the first
%column within toplo{1} is index(1) data
controlesi = toplot{1};
NodalKO = toplot{2};
colSZ = 5;
chan = 1;% 1 - Sox2, 2 - Nanog   %index2 = [8 6]; % DAPI GFP(nanog) RFP(sox2)

for k=1:colSZ
a = find(controlpErk(:,3)==k); % third column is the clony size
figure(1),histogram(controlpErk(a,chan),'normalization','pdf');hold on;
figure(2),histogram(MEKpErk(a,chan),'normalization','pdf');hold on
end
figure(1), title('Control uColonies');ylabel('Frequency');xlim([0 15]); %ylim([0 0.5])
legend(colSZ);
figure(2), title('Nodal KO uColonies');ylabel('Frequency');xlim([0 15]);%ylim([0 0.5])
legend(colSZ);


